@use "@angular/material" as mat;
@include mat.core();
@import "material-icons/iconfont/material-icons.scss";

// Define a light theme
$primary: mat.define-palette(mat.$blue-palette, 600, 400, 800);
$accent: mat.define-palette(mat.$cyan-palette, A400, A200, A700);
$negative: mat.define-palette(mat.$red-palette, 600, 400, 800);
$positive: mat.define-palette(mat.$green-palette, 600, 400, 800);
$warning: mat.define-palette(mat.$orange-palette, 600, 400, 800);

$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $negative,
    ),
  )
);

$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $negative,
    ),
  )
);

body {
  margin: 0;
  overscroll-behavior-y: contain;
}

body[theme="light"] {
  $theme: light;
  @include mat.all-component-themes($light-theme);
}

body[theme="dark"] {
  $theme: dark;
  @include mat.all-component-themes($dark-theme);
  input:not(.mat-input-element),
  select:not(.mat-input-element),
  textarea:not(.mat-input-element) {
    background-color: #424242;
    color: white;
    -webkit-text-fill-color: white;
  }

  .ngx-charts {
    text {
      fill: #fff !important;
    }
  }
}

.mat-warning-bg {
  background-color: mat.get-color-from-palette($warning) !important;
  color: white !important;
}
.mat-negative-bg {
  background-color: mat.get-color-from-palette($negative) !important;
  color: white !important;
}

.mat-positive-bg {
  background-color: mat.get-color-from-palette($positive) !important;
  color: white !important;
}

textarea::-webkit-input-placeholder {
  color: gray !important;
}

mat-drawer-container {
  height: 100vh;
}

a {
  position: relative;
  color: #108ee9;
  text-decoration: none;
}

mat-icon.large-icon {
  font-size: 96px;
  width: 96px;
  height: 96px;
}

/* width */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

/* Track */
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 1px grey;
  border-radius: 4px;
}
/* Handle */
::-webkit-scrollbar-thumb {
  background: rgba(127, 127, 127, 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(192, 192, 192, 0.75);
  border-radius: 4px;
}

.-portrait-only {
  @media screen and (orientation: landscape) {
    display: none !important;
  }
}

.-landscape-only {
  @media screen and (orientation: portrait) {
    display: none !important;
  }
}

// 看有沒有更好的名稱...
.-fit-width-or-height {
  @media only screen and (orientation: portrait) {
    width: 100%;
    height: auto;
  }

  @media only screen and (orientation: landscape) {
    width: auto;
    height: 100%;
  }
}

.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drop-list-dragging :not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

@font-face {
  font-family: Sitka Text;
  src: url(./assets/fonts/sitka-small-652.ttf);
}

.mat-drawer-inner-container {
  display: flex;
  flex-direction: column;
}

mat-tab-group,
.mat-tab-body-wrapper,
mat-tab-body {
  height: 100%;
}
